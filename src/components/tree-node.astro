---
import { capitalize } from "@/lib/utils";
import type { NodeItem } from "@/lib/wikis";

interface Props {
    node: NodeItem;
    level?: number;
}

const { node, level = 0 } = Astro.props;

const isFolder = node.type === "folder";
const hasChildren = node.children && node.children.length > 0;
const paddingLeft = level * 12 + 8;

---

{
    isFolder && hasChildren ? (
        <details open={level === 0}>
            <summary
                class="flex cursor-pointer items-center gap-1.5 rounded px-2 py-1 text-sm transition-colors list-none font-semibold"
                style={`padding-left: ${paddingLeft}px`}
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="32"
                    height="32"
                    viewBox="0 0 24 24"
                    class="chevron-right size-4 shrink-0 text-muted transition-transform"
                    stroke-width="2"
                >
                    <path
                        fill="currentColor"
                        d="M10.586 6.343L12 4.93L19.071 12L12 19.071l-1.414-1.414L16.243 12z"
                    />
                </svg>
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="32"
                    height="32"
                    viewBox="0 0 24 24"
                    class="size-3.5 shrink-0 text-muted"
                    stroke-width="2"
                >
                    <path
                        fill="currentColor"
                        fill-rule="evenodd"
                        d="M4 1.5a2 2 0 0 0-2 2v1q0 .086.007.168A3 3 0 0 0 0 7.5v12a3 3 0 0 0 3 3h18a3 3 0 0 0 3-3v-12a3 3 0 0 0-3-3h-9.126A4 4 0 0 0 8 1.5zm5.732 3A2 2 0 0 0 8 3.5H4v1zM3 6.5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1v-12a1 1 0 0 0-1-1z"
                        clip-rule="evenodd"
                    />
                </svg>
                <span class="truncate">
                    {capitalize(node.name.replaceAll("-", " "))}
                </span>
            </summary>
            <div class="mt-0.5">
                {node.children?.map((child) => (
                    <Astro.self node={child} level={level + 1} />
                ))}
            </div>
        </details>
    ) : (
        <a
            href={node.path}
            class="flex items-center gap-1.5 rounded px-2 py-1 text-sm transition-colors"
            style={`padding-left: ${paddingLeft}px`}
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="32"
                height="32"
                viewBox="0 0 24 24"
                class="size-4 shrink-0 text-muted"
                stroke-width="2"
            >
                <path
                    fill="currentColor"
                    fill-rule="evenodd"
                    d="M3 5a3 3 0 0 1 3-3h8a7 7 0 0 1 7 7v10a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zm10-1H6a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V9h-6zm5.584 3A5.01 5.01 0 0 0 15 4.1V7z"
                    clip-rule="evenodd"
                />
            </svg>
            <span class="truncate">
                {capitalize(node.name.replaceAll("-", " "))}
            </span>
        </a>
    )
}
