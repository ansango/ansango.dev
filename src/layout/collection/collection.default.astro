---
import { Entry, Link, Pagination } from "@/components";
import type { CollectionName, Meta } from "@/content.config";
import { LayoutDefault } from "@/layout";
import {
  Entry as EntryType,
  getPagination,
  type Entries,
} from "@/lib/collections";

interface Props {
  collection: CollectionName;
  entries: Entries;
  page: number;
  entriesPerPage: number;
  isIndex: boolean;
  meta: Meta;
}

const { entries, page, isIndex, meta, collection } = Astro.props;

const { currentPage, paginatedEntries, totalPages } = getPagination<EntryType>({
  isIndex,
  entries,
  page,
  entriesPerPage: meta.entriesPerPage,
});
---

<LayoutDefault {...meta} type="main">
  <div class="border-divider border-b-[1px]">
    <h1 class="capitalize">{collection}</h1>
    <p class="text-muted">
      {meta.description}
    </p>
  </div>
  <ul>
    {
      paginatedEntries.map((entry, i) => (
        <li
          class={`border-divider list-none py-4 [&:not(:last-child)]:border-b-[1px]`}
        >
          <Link
            href={`/${entry.collection}/${entry.id}`}
            className="space-y-1 group"
          >
            <Entry entry={entry} />
          </Link>
        </li>
      ))
    }
  </ul>
  <Pagination
    {currentPage}
    {totalPages}
    prevUrl={`/${collection}${currentPage - 1 !== 1 ? "/" + (currentPage - 1) : ""}/`}
    nextUrl={`/${collection}/${currentPage + 1}/`}
  />
</LayoutDefault>
