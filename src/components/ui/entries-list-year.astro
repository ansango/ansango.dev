---
import { getCollectionsByYear, type Entry } from "@/lib/collections";
import { getFormatDate } from "@/lib/utils";

interface Props {
    entries: Array<Entry>;
}

const { entries } = Astro.props;

const parsedEntriesByYear = getCollectionsByYear(entries);
---

{
    Object.entries(parsedEntriesByYear)
        //if is nan put first
        .sort(([yearA], [yearB]) => {
            const yearANum = parseInt(yearA);
            const yearBNum = parseInt(yearB);
            if (isNaN(yearANum) && isNaN(yearBNum)) return 0;
            if (isNaN(yearANum)) return -1;
            if (isNaN(yearBNum)) return 1;
            return yearBNum - yearANum;
        })
        .map(([year, entries]) => {
            return (
                <section>
                    <h2 class="text-xl font-semibold mb-2">
                        {isNaN(parseInt(year)) ? "Sin fecha" : year}
                    </h2>
                    <ul class="list-none space-y-2">
                        {entries.map(
                            ({
                                collection,
                                id,
                                data: { date, title, index },
                            }) => {
                                return (
                                    <li class="list-none flex items-center gap-3">
                                        <a
                                            class="flex items-baseline gap-2"
                                            href={
                                                `/${collection}` +
                                                (index ? "" : `/${id}`)
                                            }
                                        >
                                            {date && (
                                                <time
                                                    class="text-sm text-muted whitespace-nowrap min-w-20"
                                                    datetime={getFormatDate(
                                                        date,
                                                    )}
                                                >
                                                    {getFormatDate(
                                                        date,
                                                        "es-ES",
                                                        {
                                                            year: "numeric",
                                                            month: "2-digit",
                                                        },
                                                    )
                                                        .split("/")
                                                        .reverse()
                                                        .join(" Â· ")}
                                                </time>
                                            )}
                                            
                                            
                                            <u class="line-clamp-1">{title}</u>

                                
                                        </a>
                                        <a href={`/${collection}`} class="inline whitespace-nowrap italic text-sm text-muted hover:text-link">{collection}</a>
                                    </li>
                                );
                            },
                        )}
                    </ul>
                </section>
            );
        })
}
