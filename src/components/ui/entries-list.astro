---
import type { Entry } from "@/lib/collections";
import { getFormatDate } from "@/lib/utils";
import { Link, ExternalLinkIcon } from "@/components";
type EntryExternal = Entry & { link?: string; external?: boolean };

interface Props {
  entries: EntryExternal[];
}

const { entries } = Astro.props;
---

<ul class="list-none space-y-2">
  {
    entries.map(
      ({ collection, id, link, external, data: { date, title, index } }) => {
        const url = external
          ? link
          : `/${collection}` + (index ? "" : `/${id}`);
        return (
          <li class="list-none">
            <Link
              className="flex items-baseline"
              href={url ?? "#"}
              blank={Boolean(external)}
            >
              {date && (
                <time
                  class="text-muted min-w-20 text-sm whitespace-nowrap"
                  datetime={getFormatDate(date)}
                >
                  {getFormatDate(date, "es-ES", {
                    year: "numeric",
                    month: "2-digit",
                  })
                    .split("/")
                    .reverse()
                    .join(" Â· ")}
                </time>
              )}
              <u class="flex w-full items-center gap-1">
                <span class="line-clamp-1">{title}</span>
                {external && (
                  <ExternalLinkIcon className="inline-flex max-w-4 size-full" />
                )}
              </u>
            </Link>
          </li>
        );
      },
    )
  }
</ul>
